{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,IAGpCH,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,MAAU,G,CA/CzCM,SAASC,cAAc,UAsC/BC,iBAAiB,SApCFC,IACpBA,EAAEC,iBAEF,MAAMC,EAAaL,SAASC,cAAc,uBAAuBK,MAC3DC,EAAYP,SAASC,cAAc,sBAAsBK,MACzDE,EAAcR,SAASC,cAAc,wBAAwBK,MAEnE,IAAIG,EAAU,EACVC,EAAa,KAEjBC,YAAW,KACTnB,EAAciB,EAASJ,GACpBO,MAAKN,IACJO,EAAAvB,GAASwB,OAAOC,QAAQT,EAAM,IAE/BU,OAAMC,IACLJ,EAAAvB,GAASwB,OAAOI,QAAQD,EAAM,IAGlCP,EAAaS,aAAY,KACvBV,IAEIA,KAAaD,GACfY,cAAcV,GAEhBlB,EAAciB,GAAUJ,EAAaE,EAAYE,GAC9CG,MAAKN,IACJO,EAAAvB,GAASwB,OAAOC,QAAQT,EAAM,IAE/BU,OAAMC,IACLJ,EAAAvB,GAASwB,OAAOI,QAAQD,EAAM,GAC9B,GACHV,EAAU,GACZF,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst button = document.querySelector('button');\n\nconst submitPromise = e => {\n  e.preventDefault();\n\n  const delayInput = document.querySelector(\"input[name='delay']\").value;\n  const stepInput = document.querySelector('input[name=\"step\"]').value;\n  const amountInput = document.querySelector('input[name=\"amount\"]').value;\n\n  let counter = 1;\n  let intervalId = null;\n\n  setTimeout(() => {\n    createPromise(counter, delayInput)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n\n    intervalId = setInterval(() => {\n      counter++;\n\n      if (counter === +amountInput) {\n        clearInterval(intervalId);\n      }\n      createPromise(counter, +delayInput + stepInput * counter)\n        .then(value => {\n          Notiflix.Notify.success(value);\n        })\n        .catch(error => {\n          Notiflix.Notify.failure(error);\n        });\n    }, stepInput);\n  }, delayInput);\n};\n\nbutton.addEventListener('click', submitPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }\n    reject(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","document","querySelector","addEventListener","e","preventDefault","delayInput","value","stepInput","amountInput","counter","intervalId","setTimeout","then","$parcel$interopDefault","Notify","success","catch","error","failure","setInterval","clearInterval"],"version":3,"file":"03-promises.46c16f8d.js.map"}