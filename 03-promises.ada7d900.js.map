{"mappings":"AAAeA,SAASC,cAAc,UA4B/BC,iBAAiB,SA1BF,SAAAC,GACpBA,EAAEC,iBAEF,IAAMC,EAAaL,SAASC,cAAc,uBAAuBK,MAC3DC,EAAYP,SAASC,cAAc,sBAAsBK,MACzDE,EAAcR,SAASC,cAAc,wBAAwBK,MAE/DG,EAAU,EACVC,EAAa,KAEjBA,EAAaC,aAAY,WAkB3B,IAAuBC,EAAUC,IAjB7BJ,IAEiBD,GACfM,cAAcJ,IAcGE,EAZLH,EAYeI,EAZNR,EAalB,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEtDI,EAAK,sBAAuCK,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GACnDA,E,KAnBAU,MAAK,SAAAjB,GACJkB,QAAQC,IAAInB,E,IAEboB,OAAM,SAAAC,GACLH,QAAQG,MAAMA,E,MAEjBpB,E","sources":["src/js/03-promises.js"],"sourcesContent":["const button = document.querySelector('button');\n\nconst submitPromise = e => {\n  e.preventDefault();\n\n  const delayInput = document.querySelector(\"input[name='delay']\").value;\n  const stepInput = document.querySelector('input[name=\"step\"]').value;\n  const amountInput = document.querySelector('input[name=\"amount\"]').value;\n\n  let counter = 0;\n  let intervalId = null;\n\n  intervalId = setInterval(() => {\n    counter++;\n\n    if (counter === +amountInput) {\n      clearInterval(intervalId);\n    }\n    createPromise(counter, delayInput)\n      .then(value => {\n        console.log(value);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, stepInput);\n};\n\nbutton.addEventListener('click', submitPromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["document","querySelector","addEventListener","e","preventDefault","delayInput","value","stepInput","amountInput","counter","intervalId","setInterval","position","delay","clearInterval","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","console","log","catch","error"],"version":3,"file":"03-promises.ada7d900.js.map"}